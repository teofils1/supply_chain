# Generated by Django 5.2.5 on 2025-08-23 18:20

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('supplychain', '0005_pack'),
    ]

    operations = [
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('tracking_number', models.CharField(help_text='Unique tracking number for this shipment', max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('picked_up', 'Picked Up'), ('in_transit', 'In Transit'), ('out_for_delivery', 'Out for Delivery'), ('delivered', 'Delivered'), ('returned', 'Returned'), ('cancelled', 'Cancelled'), ('lost', 'Lost'), ('damaged', 'Damaged')], default='pending', help_text='Current status of the shipment', max_length=20)),
                ('carrier', models.CharField(choices=[('fedex', 'FedEx'), ('ups', 'UPS'), ('dhl', 'DHL'), ('usps', 'USPS'), ('amazon', 'Amazon Logistics'), ('local', 'Local Courier'), ('internal', 'Internal Transport'), ('other', 'Other')], help_text='Shipping carrier', max_length=20)),
                ('service_type', models.CharField(choices=[('standard', 'Standard'), ('express', 'Express'), ('overnight', 'Overnight'), ('same_day', 'Same Day'), ('ground', 'Ground'), ('air', 'Air'), ('freight', 'Freight'), ('cold_chain', 'Cold Chain')], default='standard', help_text='Type of shipping service', max_length=20)),
                ('origin_name', models.CharField(help_text='Origin facility or company name', max_length=255)),
                ('origin_address_line1', models.CharField(help_text='Origin address line 1', max_length=255)),
                ('origin_address_line2', models.CharField(blank=True, help_text='Origin address line 2', max_length=255)),
                ('origin_city', models.CharField(help_text='Origin city', max_length=100)),
                ('origin_state', models.CharField(help_text='Origin state/province', max_length=100)),
                ('origin_postal_code', models.CharField(help_text='Origin postal/ZIP code', max_length=20)),
                ('origin_country', models.CharField(help_text='Origin country', max_length=100)),
                ('destination_name', models.CharField(help_text='Destination facility or company name', max_length=255)),
                ('destination_address_line1', models.CharField(help_text='Destination address line 1', max_length=255)),
                ('destination_address_line2', models.CharField(blank=True, help_text='Destination address line 2', max_length=255)),
                ('destination_city', models.CharField(help_text='Destination city', max_length=100)),
                ('destination_state', models.CharField(help_text='Destination state/province', max_length=100)),
                ('destination_postal_code', models.CharField(help_text='Destination postal/ZIP code', max_length=20)),
                ('destination_country', models.CharField(help_text='Destination country', max_length=100)),
                ('shipped_date', models.DateTimeField(blank=True, help_text='Date and time when the shipment was shipped', null=True)),
                ('estimated_delivery_date', models.DateTimeField(blank=True, help_text='Estimated delivery date and time', null=True)),
                ('actual_delivery_date', models.DateTimeField(blank=True, help_text='Actual delivery date and time', null=True)),
                ('temperature_requirement', models.CharField(choices=[('ambient', 'Ambient (15-25째C)'), ('cool', 'Cool (2-8째C)'), ('frozen', 'Frozen (-15 to -25째C)'), ('ultra_cold', 'Ultra Cold (-70 to -80째C)'), ('controlled', 'Controlled Temperature')], default='ambient', help_text='Temperature requirement for the shipment', max_length=20)),
                ('special_handling_required', models.BooleanField(default=False, help_text='Whether special handling is required')),
                ('special_instructions', models.TextField(blank=True, help_text='Special handling instructions')),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Shipping cost', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(default='USD', help_text='Currency for shipping cost', max_length=3)),
                ('billing_reference', models.CharField(blank=True, help_text='Billing reference number', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the shipment')),
                ('external_tracking_url', models.URLField(blank=True, help_text='External tracking URL from carrier')),
            ],
            options={
                'verbose_name': 'Shipment',
                'verbose_name_plural': 'Shipments',
                'ordering': ['-created_at', 'tracking_number'],
            },
        ),
        migrations.CreateModel(
            name='ShipmentPack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('quantity_shipped', models.PositiveIntegerField(default=1, help_text='Quantity of this pack being shipped')),
                ('notes', models.TextField(blank=True, help_text='Notes specific to this pack in the shipment')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pack_shipments', to='supplychain.pack')),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipment_packs', to='supplychain.shipment')),
            ],
            options={
                'verbose_name': 'Shipment Pack',
                'verbose_name_plural': 'Shipment Packs',
            },
        ),
        migrations.AddField(
            model_name='shipment',
            name='packs',
            field=models.ManyToManyField(help_text='Packs included in this shipment', related_name='shipments', through='supplychain.ShipmentPack', to='supplychain.pack'),
        ),
        migrations.AddIndex(
            model_name='shipmentpack',
            index=models.Index(fields=['shipment', 'pack'], name='supplychain_shipmen_913224_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='shipmentpack',
            unique_together={('shipment', 'pack')},
        ),
        migrations.AddIndex(
            model_name='shipment',
            index=models.Index(fields=['tracking_number'], name='supplychain_trackin_fb5d70_idx'),
        ),
        migrations.AddIndex(
            model_name='shipment',
            index=models.Index(fields=['status'], name='supplychain_status_a28cd8_idx'),
        ),
        migrations.AddIndex(
            model_name='shipment',
            index=models.Index(fields=['carrier'], name='supplychain_carrier_57c84c_idx'),
        ),
        migrations.AddIndex(
            model_name='shipment',
            index=models.Index(fields=['shipped_date'], name='supplychain_shipped_55084e_idx'),
        ),
        migrations.AddIndex(
            model_name='shipment',
            index=models.Index(fields=['estimated_delivery_date'], name='supplychain_estimat_ef0b9e_idx'),
        ),
        migrations.AddIndex(
            model_name='shipment',
            index=models.Index(fields=['actual_delivery_date'], name='supplychain_actual__3e8965_idx'),
        ),
        migrations.AddIndex(
            model_name='shipment',
            index=models.Index(fields=['origin_city', 'origin_state'], name='supplychain_origin__bc4454_idx'),
        ),
        migrations.AddIndex(
            model_name='shipment',
            index=models.Index(fields=['destination_city', 'destination_state'], name='supplychain_destina_7e5bc0_idx'),
        ),
    ]
