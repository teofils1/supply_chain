# Generated by Django 5.2.5 on 2025-08-23 17:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('supplychain', '0004_batch'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('serial_number', models.CharField(help_text='Unique serial number for this pack', max_length=100, unique=True)),
                ('pack_size', models.PositiveIntegerField(help_text='Number of units in this pack', validators=[django.core.validators.MinValueValidator(1)])),
                ('pack_type', models.CharField(choices=[('bottle', 'Bottle'), ('box', 'Box'), ('blister', 'Blister Pack'), ('vial', 'Vial'), ('tube', 'Tube'), ('sachet', 'Sachet'), ('ampoule', 'Ampoule'), ('syringe', 'Syringe'), ('inhaler', 'Inhaler'), ('other', 'Other')], help_text='Type of packaging', max_length=20)),
                ('manufacturing_date', models.DateField(blank=True, help_text='Pack-specific manufacturing date (if different from batch)', null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='Pack-specific expiry date (if different from batch)', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('damaged', 'Damaged'), ('recalled', 'Recalled'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('returned', 'Returned'), ('quarantined', 'Quarantined'), ('destroyed', 'Destroyed')], default='active', help_text='Current status of the pack', max_length=20)),
                ('location', models.CharField(blank=True, help_text='Current location/warehouse of the pack', max_length=255)),
                ('warehouse_section', models.CharField(blank=True, help_text='Specific section within the warehouse', max_length=100)),
                ('quality_control_notes', models.TextField(blank=True, help_text='Pack-specific quality control notes')),
                ('quality_control_passed', models.BooleanField(default=True, help_text='Whether the pack passed quality control')),
                ('regulatory_code', models.CharField(blank=True, help_text='Regulatory tracking code for this pack', max_length=100)),
                ('customer_reference', models.CharField(blank=True, help_text='Customer reference number', max_length=100)),
                ('shipped_date', models.DateTimeField(blank=True, help_text='Date and time when the pack was shipped', null=True)),
                ('delivered_date', models.DateTimeField(blank=True, help_text='Date and time when the pack was delivered', null=True)),
                ('tracking_number', models.CharField(blank=True, help_text='Shipping tracking number', max_length=100)),
                ('batch', models.ForeignKey(help_text='Batch this pack belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='packs', to='supplychain.batch')),
            ],
            options={
                'verbose_name': 'Pack',
                'verbose_name_plural': 'Packs',
                'ordering': ['-created_at', 'serial_number'],
                'indexes': [models.Index(fields=['serial_number'], name='supplychain_serial__631509_idx'), models.Index(fields=['batch', 'serial_number'], name='supplychain_batch_i_88eb1d_idx'), models.Index(fields=['status'], name='supplychain_status_4cbb4a_idx'), models.Index(fields=['location'], name='supplychain_locatio_408088_idx'), models.Index(fields=['pack_type'], name='supplychain_pack_ty_e6b191_idx'), models.Index(fields=['shipped_date'], name='supplychain_shipped_93add1_idx'), models.Index(fields=['delivered_date'], name='supplychain_deliver_0cdc76_idx')],
            },
        ),
    ]
